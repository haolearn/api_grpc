// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums.proto

package com.xingyun.policy.api.enums;

/**
 * <pre>
 * 城市类型.
 * </pre>
 *
 * Protobuf enum {@code api.CityType}
 */
public enum CityType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * 空值.
   * </pre>
   *
   * <code>CITY_TYPE_LEVEL_EMPTY = 0;</code>
   */
  CITY_TYPE_LEVEL_EMPTY(0),
  /**
   * <pre>
   * 一线城市.
   * </pre>
   *
   * <code>CITY_TYPE_LEVEL_ONE = 1;</code>
   */
  CITY_TYPE_LEVEL_ONE(1),
  /**
   * <pre>
   * 二线城市.
   * </pre>
   *
   * <code>CITY_TYPE_LEVEL_TWO = 2;</code>
   */
  CITY_TYPE_LEVEL_TWO(2),
  /**
   * <pre>
   * 三线城市.
   * </pre>
   *
   * <code>CITY_TYPE_LEVEL_THREE = 3;</code>
   */
  CITY_TYPE_LEVEL_THREE(3),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * 空值.
   * </pre>
   *
   * <code>CITY_TYPE_LEVEL_EMPTY = 0;</code>
   */
  public static final int CITY_TYPE_LEVEL_EMPTY_VALUE = 0;
  /**
   * <pre>
   * 一线城市.
   * </pre>
   *
   * <code>CITY_TYPE_LEVEL_ONE = 1;</code>
   */
  public static final int CITY_TYPE_LEVEL_ONE_VALUE = 1;
  /**
   * <pre>
   * 二线城市.
   * </pre>
   *
   * <code>CITY_TYPE_LEVEL_TWO = 2;</code>
   */
  public static final int CITY_TYPE_LEVEL_TWO_VALUE = 2;
  /**
   * <pre>
   * 三线城市.
   * </pre>
   *
   * <code>CITY_TYPE_LEVEL_THREE = 3;</code>
   */
  public static final int CITY_TYPE_LEVEL_THREE_VALUE = 3;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static CityType valueOf(int value) {
    return forNumber(value);
  }

  public static CityType forNumber(int value) {
    switch (value) {
      case 0: return CITY_TYPE_LEVEL_EMPTY;
      case 1: return CITY_TYPE_LEVEL_ONE;
      case 2: return CITY_TYPE_LEVEL_TWO;
      case 3: return CITY_TYPE_LEVEL_THREE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<CityType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      CityType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<CityType>() {
          public CityType findValueByNumber(int number) {
            return CityType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.xingyun.policy.api.enums.Enums.getDescriptor().getEnumTypes().get(5);
  }

  private static final CityType[] VALUES = values();

  public static CityType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private CityType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:api.CityType)
}

