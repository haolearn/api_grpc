// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums.proto

package com.xingyun.policy.api.enums;

/**
 * <pre>
 * 用车车型.
 * </pre>
 *
 * Protobuf enum {@code api.CarType}
 */
public enum CarType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * 空.
   * </pre>
   *
   * <code>CAR_TYPE_EMPTY = 0;</code>
   */
  CAR_TYPE_EMPTY(0),
  /**
   * <pre>
   * 经济型.
   * </pre>
   *
   * <code>CAR_TYPE_ECONOMIC = 1;</code>
   */
  CAR_TYPE_ECONOMIC(1),
  /**
   * <pre>
   * 舒适型.
   * </pre>
   *
   * <code>CAR_TYPE_COMFORT = 2;</code>
   */
  CAR_TYPE_COMFORT(2),
  /**
   * <pre>
   * 商务型.
   * </pre>
   *
   * <code>CAR_TYPE_BUSINESS = 3;</code>
   */
  CAR_TYPE_BUSINESS(3),
  /**
   * <pre>
   * 豪华型.
   * </pre>
   *
   * <code>CAR_TYPE_LUXURY = 4;</code>
   */
  CAR_TYPE_LUXURY(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * 空.
   * </pre>
   *
   * <code>CAR_TYPE_EMPTY = 0;</code>
   */
  public static final int CAR_TYPE_EMPTY_VALUE = 0;
  /**
   * <pre>
   * 经济型.
   * </pre>
   *
   * <code>CAR_TYPE_ECONOMIC = 1;</code>
   */
  public static final int CAR_TYPE_ECONOMIC_VALUE = 1;
  /**
   * <pre>
   * 舒适型.
   * </pre>
   *
   * <code>CAR_TYPE_COMFORT = 2;</code>
   */
  public static final int CAR_TYPE_COMFORT_VALUE = 2;
  /**
   * <pre>
   * 商务型.
   * </pre>
   *
   * <code>CAR_TYPE_BUSINESS = 3;</code>
   */
  public static final int CAR_TYPE_BUSINESS_VALUE = 3;
  /**
   * <pre>
   * 豪华型.
   * </pre>
   *
   * <code>CAR_TYPE_LUXURY = 4;</code>
   */
  public static final int CAR_TYPE_LUXURY_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static CarType valueOf(int value) {
    return forNumber(value);
  }

  public static CarType forNumber(int value) {
    switch (value) {
      case 0: return CAR_TYPE_EMPTY;
      case 1: return CAR_TYPE_ECONOMIC;
      case 2: return CAR_TYPE_COMFORT;
      case 3: return CAR_TYPE_BUSINESS;
      case 4: return CAR_TYPE_LUXURY;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<CarType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      CarType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<CarType>() {
          public CarType findValueByNumber(int number) {
            return CarType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.xingyun.policy.api.enums.Enums.getDescriptor().getEnumTypes().get(2);
  }

  private static final CarType[] VALUES = values();

  public static CarType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private CarType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:api.CarType)
}

