// Code generated by protoc-gen-go. DO NOT EDIT.
// source: request.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 可扩充请求消息头，封装通用的请求消息头.
type RequestHeader struct {
	// 请求唯一的trace_id，全局唯一，响应头中带回，用于跟踪服务.
	TraceId string `protobuf:"bytes,1,opt,name=trace_id,json=traceId" json:"trace_id,omitempty"`
	// 请求方幂等key,不传接口不提供幂等支持，请求唯一键=key+source.
	Key string `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	// 向服务者标明自己的身份.
	Source string `protobuf:"bytes,3,opt,name=source" json:"source,omitempty"`
	// 可选扩展信息,任何类型.
	Ext *google_protobuf.Any `protobuf:"bytes,100,opt,name=ext" json:"ext,omitempty"`
}

func (m *RequestHeader) Reset()                    { *m = RequestHeader{} }
func (m *RequestHeader) String() string            { return proto.CompactTextString(m) }
func (*RequestHeader) ProtoMessage()               {}
func (*RequestHeader) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *RequestHeader) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

func (m *RequestHeader) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RequestHeader) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *RequestHeader) GetExt() *google_protobuf.Any {
	if m != nil {
		return m.Ext
	}
	return nil
}

// 通用翻页请求消息.
type PageRequest struct {
	// 页码，[1,n].
	PageNum int32 `protobuf:"varint,1,opt,name=page_num,json=pageNum" json:"page_num,omitempty"`
	// 分页大小.如果获取的是全部数据, 该字段值为0.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *PageRequest) Reset()                    { *m = PageRequest{} }
func (m *PageRequest) String() string            { return proto.CompactTextString(m) }
func (*PageRequest) ProtoMessage()               {}
func (*PageRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *PageRequest) GetPageNum() int32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *PageRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// 政策检查请求.
type CheckRequest struct {
	// 请求头.
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	// 政策业务类型.
	BusiType BusiType `protobuf:"varint,2,opt,name=busi_type,json=busiType,enum=api.BusiType" json:"busi_type,omitempty"`
	// 业务相关数据请求,如FlightCheckItem，CarCheckItem.
	Items []*google_protobuf.Any `protobuf:"bytes,100,rep,name=items" json:"items,omitempty"`
}

func (m *CheckRequest) Reset()                    { *m = CheckRequest{} }
func (m *CheckRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckRequest) ProtoMessage()               {}
func (*CheckRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *CheckRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CheckRequest) GetBusiType() BusiType {
	if m != nil {
		return m.BusiType
	}
	return BusiType_BUSI_TYPE_EMPTY
}

func (m *CheckRequest) GetItems() []*google_protobuf.Any {
	if m != nil {
		return m.Items
	}
	return nil
}

// 规则列表请求.
type ListRequest struct {
	// 请求头.
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	// 企业ID.
	Eid int64 `protobuf:"varint,2,opt,name=eid" json:"eid,omitempty"`
	// 政策业务类型.
	BusiType BusiType `protobuf:"varint,3,opt,name=busi_type,json=busiType,enum=api.BusiType" json:"busi_type,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *ListRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ListRequest) GetEid() int64 {
	if m != nil {
		return m.Eid
	}
	return 0
}

func (m *ListRequest) GetBusiType() BusiType {
	if m != nil {
		return m.BusiType
	}
	return BusiType_BUSI_TYPE_EMPTY
}

// 规则明细请求.
type ListDetailRequest struct {
	// 请求头.
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	// 用户id列表.
	Cuids []int64 `protobuf:"varint,2,rep,packed,name=cuids" json:"cuids,omitempty"`
	// 业务类型.
	BusiType BusiType `protobuf:"varint,3,opt,name=busi_type,json=busiType,enum=api.BusiType" json:"busi_type,omitempty"`
}

func (m *ListDetailRequest) Reset()                    { *m = ListDetailRequest{} }
func (m *ListDetailRequest) String() string            { return proto.CompactTextString(m) }
func (*ListDetailRequest) ProtoMessage()               {}
func (*ListDetailRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *ListDetailRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ListDetailRequest) GetCuids() []int64 {
	if m != nil {
		return m.Cuids
	}
	return nil
}

func (m *ListDetailRequest) GetBusiType() BusiType {
	if m != nil {
		return m.BusiType
	}
	return BusiType_BUSI_TYPE_EMPTY
}

func init() {
	proto.RegisterType((*RequestHeader)(nil), "api.RequestHeader")
	proto.RegisterType((*PageRequest)(nil), "api.PageRequest")
	proto.RegisterType((*CheckRequest)(nil), "api.CheckRequest")
	proto.RegisterType((*ListRequest)(nil), "api.ListRequest")
	proto.RegisterType((*ListDetailRequest)(nil), "api.ListDetailRequest")
}

func init() { proto.RegisterFile("request.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 374 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0x41, 0xab, 0xd3, 0x40,
	0x10, 0xc7, 0xc9, 0x5b, 0xd2, 0xf7, 0x3a, 0xb1, 0xf2, 0x5c, 0x1e, 0x92, 0xd6, 0x4b, 0xc8, 0xa1,
	0x94, 0x1e, 0xb6, 0x50, 0x3f, 0x81, 0x55, 0x41, 0x41, 0xa4, 0xac, 0xde, 0xcb, 0x26, 0x3b, 0xa6,
	0x4b, 0x9b, 0x6c, 0xcc, 0xee, 0x62, 0x53, 0xbc, 0xf8, 0x15, 0xfc, 0xc4, 0x92, 0x4d, 0x7a, 0xe8,
	0x41, 0xc1, 0xde, 0xe6, 0x3f, 0xf3, 0xcf, 0xfc, 0x7f, 0x13, 0x16, 0x26, 0x0d, 0x7e, 0x77, 0x68,
	0x2c, 0xab, 0x1b, 0x6d, 0x35, 0x25, 0xa2, 0x56, 0xb3, 0x69, 0xa1, 0x75, 0x71, 0xc4, 0x95, 0x6f,
	0x65, 0xee, 0xdb, 0x4a, 0x54, 0x6d, 0x3f, 0x9f, 0x45, 0x58, 0xb9, 0xd2, 0xf4, 0x22, 0xfd, 0x09,
	0x13, 0xde, 0x7f, 0xfd, 0x01, 0x85, 0xc4, 0x86, 0x4e, 0xe1, 0xc1, 0x36, 0x22, 0xc7, 0x9d, 0x92,
	0x71, 0x90, 0x04, 0x8b, 0x31, 0xbf, 0xf7, 0xfa, 0xa3, 0xa4, 0x8f, 0x40, 0x0e, 0xd8, 0xc6, 0x77,
	0xbe, 0xdb, 0x95, 0xf4, 0x25, 0x8c, 0x8c, 0x76, 0x4d, 0x8e, 0x31, 0xf1, 0xcd, 0x41, 0xd1, 0x39,
	0x10, 0x3c, 0xd9, 0x58, 0x26, 0xc1, 0x22, 0x5a, 0x3f, 0xb1, 0x9e, 0x85, 0x5d, 0x58, 0xd8, 0x9b,
	0xaa, 0xe5, 0x9d, 0x21, 0x7d, 0x0f, 0xd1, 0x56, 0x14, 0x38, 0x10, 0x74, 0xd9, 0xb5, 0x28, 0x70,
	0x57, 0xb9, 0xd2, 0x67, 0x87, 0xfc, 0xbe, 0xd3, 0x9f, 0x5d, 0x49, 0x5f, 0xc1, 0xd8, 0x8f, 0x8c,
	0x3a, 0xa3, 0x27, 0x08, 0xb9, 0xf7, 0x7e, 0x51, 0x67, 0x4c, 0x7f, 0x07, 0xf0, 0xec, 0xed, 0x1e,
	0xf3, 0xc3, 0x65, 0xd1, 0x12, 0x46, 0x7b, 0x7f, 0x8e, 0x5f, 0x13, 0xad, 0x29, 0x13, 0xb5, 0x62,
	0x57, 0x87, 0xf2, 0xc1, 0x41, 0x97, 0x30, 0xce, 0x9c, 0x51, 0x3b, 0xdb, 0xd6, 0xfd, 0xe6, 0xe7,
	0xeb, 0x89, 0xb7, 0x6f, 0x9c, 0x51, 0x5f, 0xdb, 0x1a, 0xf9, 0x43, 0x36, 0x54, 0x74, 0x09, 0xa1,
	0xb2, 0x58, 0x9a, 0x58, 0x26, 0xe4, 0xaf, 0x97, 0xf5, 0x96, 0xf4, 0x07, 0x44, 0x9f, 0x94, 0xb1,
	0xb7, 0x20, 0x3d, 0x02, 0x41, 0x25, 0x3d, 0x0c, 0xe1, 0x5d, 0x79, 0x0d, 0x49, 0xfe, 0x09, 0x99,
	0xfe, 0x0a, 0xe0, 0x45, 0x97, 0xfc, 0x0e, 0xad, 0x50, 0xc7, 0x5b, 0xf2, 0x9f, 0x20, 0xcc, 0x9d,
	0x92, 0x26, 0xbe, 0x4b, 0xc8, 0x82, 0xf0, 0x5e, 0xfc, 0x0f, 0xc3, 0x66, 0x0e, 0x69, 0xae, 0x4b,
	0x76, 0x52, 0x55, 0xd1, 0xba, 0x8a, 0xd5, 0xfa, 0xa8, 0xf2, 0xd6, 0x9b, 0xa5, 0xd5, 0x6c, 0x78,
	0xaf, 0xdb, 0x20, 0x1b, 0xf9, 0x3f, 0xf7, 0xfa, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2a, 0xa2,
	0xee, 0x83, 0xc3, 0x02, 0x00, 0x00,
}
